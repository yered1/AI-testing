worker_processes  1;
events { worker_connections 1024; }

http {
  # Extract tenant from groups like "tenant_acme", "tenant_beta"
  map $upstream_http_x_auth_request_groups $tenant {
    "~tenant_([a-zA-Z0-9_-]+)" $1;
    default "t_demo";
  }

  # Expose groups header for checks
  map $upstream_http_x_auth_request_groups $authz_groups {
    default $upstream_http_x_auth_request_groups;
  }

  server {
    listen 8081;

    # OAuth2 Proxy endpoints
    location /oauth2/ {
      proxy_pass       http://oauth2-proxy:4180;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Scheme $scheme;
    }

    # Auth check
    location = /oauth2/auth {
      proxy_pass       http://oauth2-proxy:4180;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Scheme $scheme;
    }

    # Admin-only endpoints
    location ~ ^/(v2/quotas|v1/engagements/.*/plan)$ {
      auth_request /oauth2/auth;
      auth_request_set $auth_user   $upstream_http_x_auth_request_user;
      auth_request_set $auth_email  $upstream_http_x_auth_request_email;
      # Require role_admin
      if ($authz_groups !~* "(^|[,; ])role_admin([,; ]|$)") { return 403; }

      proxy_set_header X-User   $auth_user;
      proxy_set_header X-Email  $auth_email;
      proxy_set_header X-Groups $authz_groups;
      proxy_set_header X-Tenant-Id $tenant;

      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_pass http://orchestrator:8080;
    }

    # Approvals: admin or reviewer
    location ~ ^/v2/approvals {
      auth_request /oauth2/auth;
      auth_request_set $auth_user   $upstream_http_x_auth_request_user;
      auth_request_set $auth_email  $upstream_http_x_auth_request_email;
      if ($authz_groups !~* "(^|[,; ])(role_admin|role_reviewer)([,; ]|$)") { return 403; }

      proxy_set_header X-User   $auth_user;
      proxy_set_header X-Email  $auth_email;
      proxy_set_header X-Groups $authz_groups;
      proxy_set_header X-Tenant-Id $tenant;

      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_pass http://orchestrator:8080;
    }

    # Everything else (authenticated users; role checks can also happen in OPA)
    location / {
      auth_request /oauth2/auth;

      auth_request_set $auth_user   $upstream_http_x_auth_request_user;
      auth_request_set $auth_email  $upstream_http_x_auth_request_email;

      proxy_set_header X-User   $auth_user;
      proxy_set_header X-Email  $auth_email;
      proxy_set_header X-Groups $authz_groups;
      proxy_set_header X-Tenant-Id $tenant;

      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_pass http://orchestrator:8080;
    }
  }
}
