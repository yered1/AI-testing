worker_processes  1;
events { worker_connections 1024; }

http {
  # Allow env for tenant default; change as needed
  map $http_x_tenant_id $tenant {
    default "t_demo";
  }
  server {
    listen 8081;

    # OAuth2 Proxy endpoints
    location /oauth2/ {
      proxy_pass       http://oauth2-proxy:4180;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Scheme $scheme;
    }

    # Auth check
    location = /oauth2/auth {
      proxy_pass       http://oauth2-proxy:4180;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Scheme $scheme;
    }

    # Protected upstream: orchestrator
    location / {
      # Perform subrequest to /oauth2/auth; oauth2-proxy emits X-Auth-Request-* headers
      auth_request /oauth2/auth;

      # Extract user/email from auth subrequest
      auth_request_set $auth_user  $upstream_http_x_auth_request_user;
      auth_request_set $auth_email $upstream_http_x_auth_request_email;

      proxy_set_header X-Dev-User  $auth_user;
      proxy_set_header X-Dev-Email $auth_email;
      proxy_set_header X-Tenant-Id $tenant;

      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_pass http://orchestrator:8080;
    }
  }
}
