# AI-Testing Platform - Main Docker Compose Configuration
# Usage: docker compose up -d
# Profiles: default, agents, full, dev

version: '3.8'

x-common-env: &common-env
  LOG_LEVEL: ${LOG_LEVEL:-INFO}
  TZ: ${TZ:-UTC}

services:
  # ============= CORE SERVICES =============
  db:
    image: postgres:15-alpine
    container_name: ai_testing_db
    environment:
      POSTGRES_DB: ${DB_NAME:-ai_testing}
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - ai_testing

  redis:
    image: redis:7-alpine
    container_name: ai_testing_redis
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - ai_testing

  orchestrator:
    build:
      context: ../orchestrator
      dockerfile: Dockerfile
    container_name: ai_testing_orchestrator
    environment:
      <<: *common-env
      DATABASE_URL: postgresql://${DB_USER:-postgres}:${DB_PASSWORD:-postgres}@db:5432/${DB_NAME:-ai_testing}
      REDIS_URL: redis://redis:6379
      SECRET_KEY: ${SECRET_KEY:-change-me-in-production}
      ALLOW_ACTIVE_SCAN: ${ALLOW_ACTIVE_SCAN:-0}
      EVIDENCE_DIR: ${EVIDENCE_DIR:-/evidence}
      OPA_URL: ${OPA_URL:-http://opa:8181}
      # AI Providers (optional)
      OPENAI_API_KEY: ${OPENAI_API_KEY:-}
      ANTHROPIC_API_KEY: ${ANTHROPIC_API_KEY:-}
      AZURE_OPENAI_KEY: ${AZURE_OPENAI_KEY:-}
      AZURE_OPENAI_ENDPOINT: ${AZURE_OPENAI_ENDPOINT:-}
    volumes:
      - evidence_data:/evidence
      - ../orchestrator:/app
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "${API_PORT:-8080}:8080"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - ai_testing

  opa:
    image: openpolicyagent/opa:0.65.0
    container_name: ai_testing_opa
    command: ["run", "--server", "--addr", ":8181", "/policies"]
    volumes:
      - ../policies:/policies:ro
    ports:
      - "${OPA_PORT:-8181}:8181"
    networks:
      - ai_testing

  # ============= UI SERVICE (Profile: full, dev) =============
  ui:
    build:
      context: ../ui
      dockerfile: Dockerfile
    container_name: ai_testing_ui
    profiles: ["full", "dev"]
    environment:
      API_URL: ${API_URL:-http://orchestrator:8080}
    depends_on:
      - orchestrator
    ports:
      - "${UI_PORT:-3000}:3000"
    networks:
      - ai_testing

  # ============= AGENTS (Profile: agents, full) =============
  zap-agent:
    build:
      context: ../agents/zap_agent
      dockerfile: Dockerfile
    container_name: ai_testing_zap
    profiles: ["agents", "full"]
    environment:
      <<: *common-env
      ORCHESTRATOR_URL: http://orchestrator:8080
      AGENT_TOKEN: ${ZAP_AGENT_TOKEN}
      ALLOW_ACTIVE_SCAN: ${ALLOW_ACTIVE_SCAN:-0}
    depends_on:
      - orchestrator
    networks:
      - ai_testing

  nuclei-agent:
    build:
      context: ../agents/nuclei_agent
      dockerfile: Dockerfile
    container_name: ai_testing_nuclei
    profiles: ["agents", "full"]
    environment:
      <<: *common-env
      ORCHESTRATOR_URL: http://orchestrator:8080
      AGENT_TOKEN: ${NUCLEI_AGENT_TOKEN}
    depends_on:
      - orchestrator
    networks:
      - ai_testing

  semgrep-agent:
    build:
      context: ../agents/semgrep_agent
      dockerfile: Dockerfile
    container_name: ai_testing_semgrep
    profiles: ["agents", "full"]
    environment:
      <<: *common-env
      ORCHESTRATOR_URL: http://orchestrator:8080
      AGENT_TOKEN: ${SEMGREP_AGENT_TOKEN}
    depends_on:
      - orchestrator
    networks:
      - ai_testing

volumes:
  postgres_data:
  redis_data:
  evidence_data:

networks:
  ai_testing:
    driver: bridge
